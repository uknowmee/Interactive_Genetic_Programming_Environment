//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/projects/Interactive_Genetic_Programming_Environment/Interactive.Genetic.Programming.Environment/src/Services/Interpreter/IntGrammar.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Interpreter {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IIntGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class IntGrammarBaseListener : IIntGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] IntGrammarParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] IntGrammarParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] IntGrammarParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] IntGrammarParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] IntGrammarParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] IntGrammarParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] IntGrammarParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] IntGrammarParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] IntGrammarParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] IntGrammarParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] IntGrammarParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] IntGrammarParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameters([NotNull] IntGrammarParser.ParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameters([NotNull] IntGrammarParser.ParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] IntGrammarParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] IntGrammarParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] IntGrammarParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] IntGrammarParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.objectFunctionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectFunctionCall([NotNull] IntGrammarParser.ObjectFunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.objectFunctionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectFunctionCall([NotNull] IntGrammarParser.ObjectFunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.objectFunctionCallFromFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectFunctionCallFromFunction([NotNull] IntGrammarParser.ObjectFunctionCallFromFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.objectFunctionCallFromFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectFunctionCallFromFunction([NotNull] IntGrammarParser.ObjectFunctionCallFromFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.objectCreationCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectCreationCall([NotNull] IntGrammarParser.ObjectCreationCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.objectCreationCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectCreationCall([NotNull] IntGrammarParser.ObjectCreationCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.inplaceQuestion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInplaceQuestion([NotNull] IntGrammarParser.InplaceQuestionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.inplaceQuestion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInplaceQuestion([NotNull] IntGrammarParser.InplaceQuestionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedExpression([NotNull] IntGrammarParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedExpression([NotNull] IntGrammarParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExpression([NotNull] IntGrammarParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExpression([NotNull] IntGrammarParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>objectFunctionCallExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectFunctionCallExpression([NotNull] IntGrammarParser.ObjectFunctionCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>objectFunctionCallExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectFunctionCallExpression([NotNull] IntGrammarParser.ObjectFunctionCallExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>additiveExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpression([NotNull] IntGrammarParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>additiveExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpression([NotNull] IntGrammarParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierExpression([NotNull] IntGrammarParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierExpression([NotNull] IntGrammarParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotExpression([NotNull] IntGrammarParser.NotExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotExpression([NotNull] IntGrammarParser.NotExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonExpression([NotNull] IntGrammarParser.ComparisonExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonExpression([NotNull] IntGrammarParser.ComparisonExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicativeExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpression([NotNull] IntGrammarParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicativeExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpression([NotNull] IntGrammarParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>objectCreationCallExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectCreationCallExpression([NotNull] IntGrammarParser.ObjectCreationCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>objectCreationCallExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectCreationCallExpression([NotNull] IntGrammarParser.ObjectCreationCallExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanExpression([NotNull] IntGrammarParser.BooleanExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanExpression([NotNull] IntGrammarParser.BooleanExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionExpression([NotNull] IntGrammarParser.FunctionExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionExpression</c>
	/// labeled alternative in <see cref="IntGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionExpression([NotNull] IntGrammarParser.FunctionExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultOp([NotNull] IntGrammarParser.MultOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultOp([NotNull] IntGrammarParser.MultOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddOp([NotNull] IntGrammarParser.AddOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddOp([NotNull] IntGrammarParser.AddOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.compareOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareOp([NotNull] IntGrammarParser.CompareOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.compareOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareOp([NotNull] IntGrammarParser.CompareOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.boolOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolOp([NotNull] IntGrammarParser.BoolOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.boolOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolOp([NotNull] IntGrammarParser.BoolOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] IntGrammarParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] IntGrammarParser.ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] IntGrammarParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] IntGrammarParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="IntGrammarParser.scope"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScope([NotNull] IntGrammarParser.ScopeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="IntGrammarParser.scope"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScope([NotNull] IntGrammarParser.ScopeContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Interpreter
